#!/usr/bin/env bash
#Write a manage_my_process Bash script that:
#Indefinitely writes I am alive! to the file /tmp/my_process
#In between every I am alive! message, the program should pause for 2 seconds
#Write Bash (init) script 101-manage_my_process that manages manage_my_process. (both files need to be pushed to git)
#Requirements:
#When passing the argument start:
# 1. Starts manage_my_process
# 2. Creates a file containing its PID in /var/run/my_process.pid
# 3. Displays manage_my_process started
#When passing the argument stop:
# 1. Stops manage_my_process
# 2. Deletes the file /var/run/my_process.pid
# 3. Displays manage_my_process stopped
#When passing the argument restart
# 1. Stops manage_my_process
# 2. Deletes the file /var/run/my_process.pid
# 3. Starts manage_my_process
# 4. Creates a file containing its PID in /var/run/my_process.pid
# 5. Displays manage_my_process restarted
# 6. Displays Usage: manage_my_process {start|stop|restart} if any other argument or no argument is passed

if [ $# -gt 0 ]
then
	if [ "$1" == "start" ]
	then
		./manage_my_process &
		touch /var/run/my_process-pid
		echo "$!" > /var/run/my_process.pid
		echo "manage_my_process started"

	elif [ "$1" == "stop" ]
	then
		kill "$(cat /var/run/my_process.pid)"
		rm -f /var/run/my_process.pid
		echo "manage_my_process stopped"

	elif [ "$1" == "restart" ]
	then
		kill "$(cat /var/run/my_process.pid)"
		rm -f /var/run/my_process.pid
		./manage_my_process &
		touch /var/run/my_process.pid
		echo $$ > /var/run/my_process.pid
		echo "manage_my_process restarted"

	else
		echo "Usage: manage_my_process {start|stop|restart}"
	fi
else
	echo "Usage: manage_my_process {start|stop|restart}"
fi
	
